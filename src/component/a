import React, { Component } from 'react';
import { View, StyleSheet, Image, TouchableNativeFeedback, Text } from 'react-native';

var images = [
  { id: 'like', img: 'http://i.imgur.com/LwCYmcM.gif' },
  { id: 'love', img: 'http://i.imgur.com/k5jMsaH.gif' },
  { id: 'haha', img: 'http://i.imgur.com/f93vCxM.gif' },
  { id: 'yay', img: 'http://i.imgur.com/a44ke8c.gif' },
  { id: 'wow', img: 'http://i.imgur.com/9xTkN93.gif' },
  { id: 'sad', img: 'http://i.imgur.com/tFOrN5d.gif' },
  { id: 'angry', img: 'http://i.imgur.com/1MgcQg0.gif' },
];

export default class Reaction extends Component {
  constructor() {
    super();
    this.state = {
      open: true,
      url: 'http://i.imgur.com/k5jMsaH.gif',
    };
  }
  getImages() {
    return images.map((img, i) => {
      return (
        <View
          style={{
            position: 'absolute',
            transform: [{ rotate: i * 180 / 6 + 'deg' }, { translateX: -90 }],
          }}>
          <TouchableNativeFeedback onPress={() => this.change(i)}>
            <Image
              style={[
                styles.pic,
                {
                  transform: [{ rotate: -(i * 180 / 6) + 'deg' }],
                },
                this.img(),
              ]}
              source={{
                uri: img.img,
              }}
            />
          </TouchableNativeFeedback>
        </View>
      );
    });
  }
  gradiet_out() {
    if (this.state.open)
      return {
        flex: 1,
        height: 260,
        width: 260,
      };
  }
  gradiet_in() {
    if (this.state.open)
      return {
        borderWidth: 1,
      };
  }
  img() {
    if (this.state.open)
      return {
        height: 40,
        width: 40,
      };
  }
  change = i => {
    this.setState({ url: images[i].img, open: !this.state.open });
  };
  open = () => {
    this.setState({ open: !this.state.open });
  };
  render() {
    return (
        <View style={styles.container2}>
          <View
            colors={['#fff', '#fff']}
            style={[styles.gradiet_out, this.gradiet_out()]}>
            {this.getImages()}
            <View
              colors={['#fff', '#fff']}
              style={[styles.gradiet_in, this.gradiet_in()]}>
              <TouchableNativeFeedback onPress={this.open}>
                <Image
                  style={[
                    styles.pic,
                    {
                      height: 55,
                      width: 55,
                    },
                  ]}
                  source={{
                    uri: this.state.url,
                  }}
                />
              </TouchableNativeFeedback>
            </View>
          </View>
        </View>
    );
  }
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
    alignItems: 'center',
    justifyContent: 'center',
    backgroundColor: '#ecf0f1',
  },
  container2: {
    //position: 'relative',
    //zIndex: 0,
    //elevation: 0,
    alignItems: 'center',
    justifyContent: 'center',
    backgroundColor: '#fff',
    flexDirection: 'row',
    borderWidth: 1,
    borderColor: '#ccc',
  },
  gradiet_out: {
    //zIndex: 1,
    //position: 'absolute',
    //elevation: 1,
    alignItems: 'center',
    justifyContent: 'center',
    borderWidth: 1,
    borderColor: '#ccc',
    //backgroundColor: "#fff"
    //transform: [{'translate':[0,0,1]}]
    //zIndex: 5
  },
  gradiet_in: {
    height: 80,
    width: 80,
    alignItems: 'center',
    justifyContent: 'center',
    borderColor: '#ccc',
    //zIndex: 5
  },
  pic: {
    resizeMode: 'cover',
  },
});


 <TouchableNativeFeedback>
      <View>
        <Icon name="star" />
        <Text>ดาว 100k</Text>
      </View>
    </TouchableNativeFeedback>
    <TouchableNativeFeedback>
      <View>
        <Icon name="mode-comment" />
        <Text>ความคิดเห็น 100k</Text>
      </View>
    </TouchableNativeFeedback>
    <TouchableNativeFeedback>
      <View>
        <Icon name="share" />
        <Text>แชร์</Text>
      </View>
    </TouchableNativeFeedback>
  </View> 